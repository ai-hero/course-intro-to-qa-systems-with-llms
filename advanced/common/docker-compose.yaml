version: '3.7'

services:
  minio:
    image: minio/minio
    container_name: minio
    volumes:
      - .minio/data:/data
    env_file:
      - .env
    command: server /data
    ports:
      - "9000:9000"
    networks:
      - my-network

  redis:
    image: redis
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env
    ports:
      - "6379:6379"
    networks:
      - my-network

  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: chroma
    volumes:
      - .kb:/chroma/chroma
    ports:
      - 8000:8000
    networks:
      - my-network

  minio-client:
    image: minio/mc
    container_name: minio-client
    depends_on:
      - minio
    env_file:
      - .env

    entrypoint: >
      /bin/bash -c "
        # Loop until connection with Minio server is established
        until mc alias set myminio http://minio:9000 "${MINIO_ROOT_USER}" "${MINIO_ROOT_PASSWORD}"; do
          echo 'Waiting for Minio server...'
          sleep 1
        done

        # Check if the bucket exists
        if mc ls myminio/data; then
          echo 'Bucket already exists'
        else
          # Create a new bucket and set its policy to public
          mc mb myminio/data
          mc policy set public myminio/data
        fi

        # Add a new user to Minio
        mc admin user add myminio "${S3_ACCESS_KEY_ID}" "${S3_SECRET_ACCESS_KEY}"

        # Attach a readwrite policy to the new user
        mc admin policy attach myminio readwrite --user="${S3_ACCESS_KEY_ID}"

        exit 0
      "

    networks:
      - my-network

networks:
  my-network:
    external: true
